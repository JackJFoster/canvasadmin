# Generated by Django 3.2.20 on 2023-07-17 07:38

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=7, unique=True)),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, unique=True)),
                ('description', models.CharField(blank=True, default=None, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectKeyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, unique=True)),
                ('description', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('verified', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, unique=True)),
                ('description', models.CharField(blank=True, default=None, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('surname', models.CharField(max_length=128)),
                ('initials', models.CharField(help_text="e.g. 'RE for Robert Treharne. We need this to systematically name groups in Canvas", max_length=4)),
                ('title', models.CharField(choices=[('Dr', 'Dr'), ('Prof.', 'Prof.'), ('Mr', 'Mr'), ('Mrs', 'Mrs'), ('Miss', 'Miss'), ('Ms', 'Ms')], max_length=5)),
                ('username', models.CharField(help_text='Standard university login name (MWS, Canvas) - required for setting up Canvas groups etc', max_length=10, unique=True)),
                ('preferred_forename', models.CharField(blank=True, default=None, max_length=25)),
                ('institute_school', models.CharField(blank=True, choices=[('1', 'Ageing and Chronic Disease'), ('2', 'Human Anatomy Resource Centre'), ('3', 'Infection and Global Health'), ('4', 'Integrative Biology'), ('5', 'Liverpool School of Tropical Medicine'), ('6', 'School of Life Sciences'), ('7', 'Translational Medicine'), ('8', 'Other')], default=None, max_length=128, null=True, verbose_name='Institute/School')),
                ('department', models.CharField(blank=True, choices=[('1', 'Eye and Vision Science'), ('2', 'Musculoskeletal Biology I'), ('3', 'Musculoskeletal Biology II'), ('4', 'Clinical Infection, Microbiology and Immunology'), ('5', 'Epidemiology and Population Health'), ('6', 'Infection Biology'), ('7', 'Biochemistry'), ('8', 'Evolution, Ecology and Behaviour'), ('9', 'Funtional and Comparative Genomics'), ('10', 'Clinical Sciences'), ('11', 'International Public Health'), ('12', 'Parasitology'), ('13', 'Vector Biology'), ('14', 'Biostatistics'), ('15', 'Cellular and Molecular Physiology'), ('16', 'Molecular and Clinical Cancer Medicine'), ('17', 'Molecular Pharmacology'), ('18', "Women's and Children's Health"), ('19', 'Not applicable (SOLS, HARC etc)'), ('20', 'Other')], default=None, max_length=128, null=True)),
                ('other_department', models.CharField(blank=True, default=None, help_text='If your department is not listed then please enter it here.', max_length=28, null=True, verbose_name='Other')),
                ('location', models.CharField(choices=[('Main Campus', 'Main Campus'), ('LSTM', 'LSTM'), ('Leahurst', 'Leahurst'), ('Other', 'Other')], max_length=128)),
                ('other_location', models.CharField(blank=True, default=None, help_text='If your location is not listed then please enter it here.', max_length=28, null=True, verbose_name='Other')),
                ('agree', models.BooleanField(default=False)),
                ('number_of_projects', models.IntegerField(default=3, validators=[django.core.validators.MaxValueValidator(10)])),
            ],
            options={
                'verbose_name_plural': 'Staff',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Generic title of project area - not a specific project. (Max. 128 chars.).', max_length=128)),
                ('mbiolsci', models.BooleanField(default=True, verbose_name='Suitable for MBiolSci? (runs from October to May)')),
                ('advanced_bio_msc', models.BooleanField(default=False, verbose_name='Suitable for MSc? (12 months duration, from October)')),
                ('timestamp', models.DateField(auto_now_add=True)),
                ('description', models.CharField(help_text='A couple of sentences describing the project area, rather than a specific project.  If you wish to offer projects in two or more distinct research areas that cannot be encompassed by the same description, then you will need to complete a separate version of this form for each (you will be prompted). (Max. 1000 chars.).', max_length=12800, verbose_name='Description of project area')),
                ('suggested_keyword', models.CharField(blank=True, default=None, help_text="If nothing in the list above is suitable, or there has been an obvious omission, please submit additional relevant keywords. Separate each keyword with a comma, e.g. 'keyword1, keyword2'", max_length=128, null=True)),
                ('bioinfo_msc', models.BooleanField(default=False, verbose_name='Suitable for Bioinformatics MSc? (12 months duration, from October)')),
                ('biotech_msc', models.BooleanField(default=False, verbose_name='Suitable for Biotechnology MSc? (12 months duration, from October)')),
                ('i_and_i_msc', models.BooleanField(default=False, verbose_name='Suitable for Infection and Immunity MSc? (12 months duration, from October)')),
                ('cancer_msc', models.BooleanField(default=False, verbose_name='Suitable for Cancer Biology and Therapy MSc? (12 months duration, from October)')),
                ('sustainable_food_msc', models.BooleanField(default=False, verbose_name='Suitable for Sustainable Food Systems MSc? (12 months duration, from October)')),
                ('other_comments', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('number', models.PositiveIntegerField(default=1, help_text='I.e. how many students can do this project simultaneously? (normally max 3).', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Number of students')),
                ('allocate_to_masters', models.PositiveIntegerField(default=0, verbose_name='Allocated to Masters')),
                ('iacd_area', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('iacd_area_other', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('iacd_training', models.CharField(blank=True, default=None, max_length=10000, null=True)),
                ('iacd_techniques', models.CharField(blank=True, default=None, max_length=10000, null=True)),
                ('iacd_supervisor_2', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('confirmed', models.BooleanField(default=True)),
                ('feedback_rating', models.CharField(choices=[('1', '1: Poor'), ('2', '2: Bad'), ('3', '3: Indifferent'), ('4', '4: Good'), ('5', '5: Excellent')], default='3', max_length=128, verbose_name='How would you rate your experience using this web app?')),
                ('feedback_text', models.CharField(blank=True, default=None, help_text='Any additional feedback that can help make this web application better is greatly appreciated. (Max. 2000 chars.).', max_length=10000, null=True, verbose_name='Additional feedback')),
                ('feedback_consent', models.BooleanField(default=False)),
                ('other_type', models.ManyToManyField(blank=True, default=None, help_text="You can select up to two secondary project types (e.g. Projects with a 'Laboratory' primary type may also involve 'Modelling' etc.)", null=True, related_name='other_type', to='projects.ProjectType', verbose_name='Secondary project types (optional)')),
                ('prerequisite', models.ForeignKey(blank=True, default=None, help_text='Optionally, please select a single Year 2 pre-requisite module', null=True, on_delete=django.db.models.deletion.PROTECT, to='projects.module', verbose_name='Prerequisite module')),
                ('project_area', models.ForeignKey(help_text='Single choice of the most appropriate description of the cognate area of your project(s).', on_delete=django.db.models.deletion.PROTECT, related_name='project_area_primary', to='projects.projectarea', verbose_name='Project cognate area')),
                ('project_keyword', models.ManyToManyField(help_text='Hold down "Control", or "Command" on Mac, to select more than one.                                                                                                          Please select a minimum of three and a maximum of 5 additional keywords.                                                                                                          Do not repeat the one from the previous question. If you feel there is a very obvious keyword missing, then please contact Andy Bates (<a href="mailto:bates@liv.ac.uk">bates@liv.ac.uk</a>).', to='projects.ProjectKeyword', verbose_name='Project keywords')),
                ('project_type', models.ForeignKey(help_text='If you wish to offer projects of two or more primary types then you will need to complete a separate version of this form for each (you will be prompted).', on_delete=django.db.models.deletion.PROTECT, to='projects.projecttype', verbose_name='Primary project type')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='projects.staff')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=128, validators=[django.core.validators.RegexValidator(code='nomatch', message='This must be a nine digit number', regex='^\\d{9}$')])),
                ('last_name', models.CharField(max_length=28)),
                ('first_name', models.CharField(max_length=28)),
                ('email', models.EmailField(max_length=128)),
                ('programme', models.CharField(default='1', max_length=128)),
                ('masters_pathway', models.CharField(default='1', max_length=10000, verbose_name='Masters Pathway?')),
                ('priority', models.CharField(choices=[('1', 'Project Keywords'), ('2', 'Project Type'), ('3', "It doesn't matter")], default='3', help_text="Choose what is more important to you. E.g. If you are more concerned with being allocated a project that satisfies your preferences for project type over keywords select 'Project Type'. Your preferences will be weighted accordingly.", max_length=128, verbose_name='Allocation Priority')),
                ('summer_fieldwork', models.BooleanField(default=False, verbose_name='Support Plan')),
                ('comments', models.CharField(blank=True, default=None, max_length=1000, null=True)),
                ('feedback_consent', models.BooleanField(default=True)),
                ('feedback_rating', models.CharField(choices=[('1', '1: Poor'), ('2', '2: Bad'), ('3', '3: Indifferent'), ('4', '4: Good'), ('5', '5: Excellent')], default='3', max_length=20, verbose_name='How would you rate your experience using this web app?')),
                ('feedback_text', models.CharField(blank=True, default=None, help_text='Any additional feedback that can help make this web application better is greatly appreciated. (Max. 200 chars.).', max_length=200, null=True, verbose_name='Additional feedback')),
                ('agree', models.BooleanField(default=False)),
                ('timestamp', models.DateField(auto_now=True, null=True)),
                ('area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='projects.projectarea')),
                ('modules', models.ManyToManyField(blank=True, default=None, help_text='If you are an UG student please input all your second year modules. Hold down "Control", or "Command" on Mac, to select more than one.', to='projects.Module', verbose_name='Your Second Year Modules')),
                ('project_keyword_1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_keyword_1', to='projects.projectkeyword')),
                ('project_keyword_2', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_keyword_2', to='projects.projectkeyword')),
                ('project_keyword_3', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_keyword_3', to='projects.projectkeyword')),
                ('project_keyword_4', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_keyword_4', to='projects.projectkeyword')),
                ('project_keyword_5', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_keyword_5', to='projects.projectkeyword')),
                ('project_type_1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_type_1', to='projects.projecttype')),
                ('project_type_2', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_type_2', to='projects.projecttype')),
                ('project_type_3', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_type_3', to='projects.projecttype')),
                ('project_type_4', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_type_4', to='projects.projecttype')),
                ('project_type_5', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_type_5', to='projects.projecttype')),
            ],
            options={
                'unique_together': {('student_id', 'programme')},
            },
        ),
    ]
